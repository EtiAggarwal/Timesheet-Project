eAttrs$label <- c(toString(A),toString(Anot),
toString(pBimplyA ), toString(pBnotimplyA),
toString(pBnotimplyA ), toString(pBnotimplyAnot))
pBnotimplyA <- 1- pBimplyA
pBnotimplyAnot=1-pBimplyAnot
eAttrs$label <- c(toString(A),toString(Anot),
toString(pBimplyA ), toString(pBnotimplyA),
toString(pBnotimplyA ), toString(pBnotimplyAnot))
eAttrs$label <- c(toString(A),toString(Anot),
toString(pBimplyA ), toString(pBnotimplyA),
toString(pBnotimplyA ), toString(pBnotimplyAnot))
names(eAttrs$label) <- c(q[1],q[2], q[3], q[4], q[5], q[6])
edgeAttrs<-eAttrs
plot(rEG, edgeAttrs=eAttrs)
clear()
frame.new()
plot.new()
plot(rEG, edgeAttrs=eAttrs, attrs=attributes)
pCnotimplyAandB=1-pCimplyAandB
pCnotimplyAandnotB=1-pCimplyAandnotB
pCnotimplyAnotandB=1-pCimplyAnotandB
pCnotimplyAnotandBnot=1-pCimplyAnotandBnot
eAttrs$label <- c(toString(A),toString(Anot),
toString(pBimplyA ), toString(pBnotimplyA),
toString(pBnotimplyA ), toString(pBnotimplyAnot),
toString(pCimplyAandB), toString(pCnotimplyAandB),
toString(pCimplyAnotandB), toString(pCimplyAnotandB))
plot(rEG, edgeAttrs=eAttrs, attrs=attributes)
names(eAttrs$label) <- c(q[1],q[2], q[3], q[4], q[5], q[6],q[7],q[8],q[9])
edgeAttrs<-eAttrs
plot.new()
plot(rEG, edgeAttrs=eAttrs, attrs=attributes)
names(eAttrs$label) <- c(q[1],q[2], q[3], q[4], q[5], q[6],q[7],q[8],q[9],q[10])
plot(rEG, edgeAttrs=eAttrs, attrs=attributes)
names(eAttrs$label) <- c(q[1],q[2], q[3], q[4], q[5], q[6],q[7],q[8],q[9],q[10],q[11],q[12],q[13],q[14],q[15])
eAttrs$label <- c(toString(A),toString(Anot),
toString(pBimplyA ), toString(pBnotimplyA),
toString(pBnotimplyA ), toString(pBnotimplyAnot),
toString(pCimplyAandB), toString(pCnotimplyAandB),
toString(pCimplyAnotandB), toString(pCnotimplyAnotandB),
toString(pCimplyAandBnot), toString(pCnotimplyAandBnot),
toString(pCimplyAnotandBnot), toString(pCnotimplyAnotandBnot))
pCnotimplyAandBnot=1-pCimplyAandnotB
eAttrs$label <- c(toString(A),toString(Anot),
toString(pBimplyA ), toString(pBnotimplyA),
toString(pBnotimplyA ), toString(pBnotimplyAnot),
toString(pCimplyAandB), toString(pCnotimplyAandB),
toString(pCimplyAnotandB), toString(pCnotimplyAnotandB),
toString(pCimplyAandBnot), toString(pCnotimplyAandBnot),
toString(pCimplyAnotandBnot), toString(pCnotimplyAnotandBnot))
eAttrs$label <- c(toString(A),toString(Anot),
toString(pBimplyA ), toString(pBnotimplyA),
toString(pBnotimplyA ), toString(pBnotimplyAnot),
toString(pCimplyAandB), toString(pCnotimplyAandB),
toString(pCimplyAnotandB), toString(pCnotimplyAnotandB),
toString(pCimplyAandBnot), toString(pCnotimplyAandBnot),
toString(pCimplyAnotandBnot), toString(pCnotimplyAnotandBnot))
pCnotimplyAandB=1-pCimplyAandB
pCnotimplyAandBnot=1-pCimplyAandnotB
pCnotimplyAnotandB=1-pCimplyAnotandB
pCnotimplyAnotandBnot=1-pCimplyAnotandBnot
eAttrs$label <- c(toString(A),toString(Anot),
toString(pBimplyA ), toString(pBnotimplyA),
toString(pBnotimplyA ), toString(pBnotimplyAnot),
toString(pCimplyAandB), toString(pCnotimplyAandB),
toString(pCimplyAnotandB), toString(pCnotimplyAnotandB),
toString(pCimplyAandBnot), toString(pCnotimplyAandBnot),
toString(pCimplyAnotandBnot), toString(pCnotimplyAnotandBnot))
pCimplyAandBnot=.6
eAttrs$label <- c(toString(A),toString(Anot),
toString(pBimplyA ), toString(pBnotimplyA),
toString(pBnotimplyA ), toString(pBnotimplyAnot),
toString(pCimplyAandB), toString(pCnotimplyAandB),
toString(pCimplyAnotandB), toString(pCnotimplyAnotandB),
toString(pCimplyAandBnot), toString(pCnotimplyAandBnot),
toString(pCimplyAnotandBnot), toString(pCnotimplyAnotandBnot))
names(eAttrs$label) <- c(q[1],q[2], q[3], q[4], q[5], q[6],q[7],q[8],q[9],q[10],q[11],q[12],q[13],q[14],q[15])
names(eAttrs$label) <- c(q[1],q[2], q[3], q[4], q[5], q[6],q[7],q[8],q[9],q[10],q[11],q[12],q[13],q[14])
plot.new()
plot(rEG, edgeAttrs=eAttrs, attrs=attributes)
aANDb<-a*pBimplyA
aANDb<-A*pBimplyA
aANDnotb<-A*pBnotimplyA
b<- aANDb + notaANDb
notaANDb <- Anot*pBimplyAnot
b<- aANDb + notaANDb
Anot= 1-A
aANDb<-A*pBimplyA
aANDnotb<-A*pBnotimplyA
notaANDb <- Anot*pBimplyAnot
b<- aANDb + notaANDb
factorial(52)
(choose(13,5)^4)/factorial(52)
sprintf("straight 10 high: %f",(choose(13,5)^4)/factorial(52))
sprintf("straight 10 high: %d",(choose(13,5)^4)/factorial(52))
sprintf("straight 10 high: %e",(choose(13,5)^4)/factorial(52))
sprintf("10 flush",choose(13,5)/factorial(52))
sprintf("10 straight flush: %e",choose(13,5)/factorial(52))
sprintf("straight variable high: %e",(choose(13,5)^4)*factorial(13))/factorial(52))
sprintf("straight variable high: %e",(choose(13,5)^4*factorial(13))/factorial(52))
sprintf("10 straight flush: %e",choose(13,5)/factorial(52))
1/1000
rare=1/1000
pos=0.99
rare=1/1000
posgivenRare=0.99
posgivenRarenot=1-rare
posgivenRare=0.99*rare
posgivenRare
.99/(.99+2*(.999))
.99*.001/(.99*.001+.02*.999)
.999*.02/(.99*.001+.02*.999)
Rcpp::sourceCpp('gieug.cpp')
Rcpp::sourceCpp('gieug.cpp')
timesTwo(c(23,45,56,67))
matrix(unique(apply(combn(rep(c("H","T"),3),3 ),2, function(x)paste(x,collapse=''))))
coin=matrix(unique(apply(combn(rep(c("H","T"),3),3 ),2, function(x)paste(x,collapse=''))))
apply(matrix(mapply(do.call(rbind,strsplit(system,"")),FUN=probs),length(system)),1,function(x) Reduce("+",x))
probs <-function(inpt){
if(inpt=="H"){
return (1)
}
else{
return(0)
}
}
indexs=apply(matrix(mapply(do.call(rbind,strsplit(system,"")),FUN=probs),length(system)),1,function(x) Reduce("+",x))
indexs=apply(matrix(mapply(do.call(rbind,strsplit(coin,"")),FUN=probs),length(system)),1,function(x) Reduce("+",x))
print(system[indexs==2,])
print(coin[indexs==2,])
coin
indexs=apply(matrix(mapply(do.call(rbind,strsplit(coin,"")),FUN=probs),length(system)),1,function(x) Reduce("+",x))
print(coin[indexs==2,])
coin
indexs=apply(matrix(mapply(do.call(rbind,strsplit(coin,"")),FUN=probs),length(coin)),1,function(x) Reduce("+",x))
print(coin[indexs==2,])
coin
print(coin[indexs==2,])
choose(3,2)
choose(10,1)*(1/2)^9*(1/2)
req= box1[1]/(sum(box1))*(box2[1]+1)/sum(box2+1)
A=.75
pBimplyA=.9
pBimplyAnot=.8
pCimplyAandB=.8
pCimplyAandBnot=.6
pCimplyAnotandB=.7
pCimplyAnotandBnot=.3
pBnotimplyA <- 1- pBimplyA
pBnotimplyAnot=1-pBimplyAnot
Anot= 1-A
pCnotimplyAandB=1-pCimplyAandB
pCnotimplyAandBnot=1-pCimplyAandnotB
pCnotimplyAnotandB=1-pCimplyAnotandB
pCnotimplyAnotandBnot=1-pCimplyAnotandBnot
aANDb<-A*pBimplyA
aANDnotb<-A*pBnotimplyA
notaANDb <- Anot*pBimplyAnot
b<- aANDb + notaANDb
expectedVariance<- function(numlist, probslist){
return( sum(((numlist-expectedValue(numlist, probslist))*prboslist)^2));
}
expectedVariance(1:6, probslist)
expectedValue<- function(numlist, probslist){
return(sum(numlist*probslist));
}
expectedVariance(1:6, probslist)
probslist=rep(1/6, 6)
expectedVariance(1:6, probslist)
expectedVariance<- function(numlist, probslist){
return( sum(((numlist-expectedValue(numlist, probslist))*probslist)^2));
}
expectedVariance(1:6, probslist)
probslist
expectedVariance<- function(numlist, probslist){
return( sum(((numlist-expectedValue(numlist, probslist))*probslist)^2));
}
inclass=1:6
probs=c(0.30,0.25,0.15,0.05, 0.10,0.15)
expectedValue(inclass,probs)
expectedVariance(inclass,probs)
sqrt(expectedVariance(inclass,probs))
expectedVariance<- function(numlist, probslist){
return( sum(((numlist-expectedValue(numlist, probslist))^2)*probslist));
}
probslist=rep(1/6, 6)
expectedVariance(1:6, probslist)
probs=c(0.30,0.25,0.15,0.05, 0.10,0.15)
expectedValue(inclass,probs)
expectedVariance(inclass,probs)
sqrt(expectedVariance(inclass,probs))
sprintf("expected standard deviation %f",sqrt(expectedVariance(inclass,probs)))
setwd("/Users/stephenkinser")
tests=read.csv("tests.csv",header = F)
library("ggplot2")
thing=tests[1,]
sapply(new,function(x) sapply(x, function(y)y))
new=tests[2:length(tests[,2]),]
thing=tests[1,]
sapply(new,function(x) sapply(x, function(y)y))
new[1]
new[,1]
new[1,]
lapply(new,function(x) sapply(x, function(y)y))
lapply(new,function(x) x/thing)
thing
lapply(new,function(x) x/thing)
lapply(new,function(x) x)
rotate <- function(x) t(apply(x, 2, rev))
lapply(rotate(new),function(x) x)
rotate(new)
other=rotate(new)
lapply(other,function(x) x)
lapply(rotate(new),function(x) x)
lapply(new,function(x) x)
mapply(new,function(x) x)
apply(new,1,function(x) x)
apply(new,1,function(x) x/thing)
percentages=apply(new,1,function(x) x/thing)
plot(percentages)
plot(x=percentages)
percentages
percentages=matrix(apply(new,1,function(x) x/thing))
percentages
percentages=as.matrix(apply(new,1,function(x) x/thing))
percentages
percentages=as.data.frame(apply(new,1,function(x) x/thing))
percentages
percentages=mbind(apply(new,1,function(x) x/thing))
percentages
percentages=rbind(apply(new,1,function(x) x/thing))
percentages
percentages
output <- matrix(unlist(percentages), ncol = 10, byrow = TRUE)
output <- matrix(unlist(percentages), ncol = 7 , byrow = TRUE)
percentages
output
plot(output)
apply(new ,1, function(x) Reduce(x))
lapply(new ,1, function(x) Reduce(x))
lapply(new , function(x) Reduce(x))
sapply(new , function(x) Reduce(x))
sapply(new , function(x) Reduce("+",x))
apply(new,1 , function(x) Reduce("+",x))
pmf <- function(total, choice, probs){
return (choose(total,choice)*(probs)^choice *(1.0-probs)^(total-choice));
}
cdf <- function(total, chooseList, probs){
return(sum(sapply(chooseList,function(x) pmf(total,x,probs))))
}
pmf(n,p,x)
pmf(10,1/2,1)
pmf(10,1,1/2)
pmf(10,1,1/2)== 10/1024
pmf(100,10,.05)
b <- function(x,n,p){
return (choose(n,x)*p^n * (1-p)*(n-x))
}
b(90,100,0.95)
return (choose(n,x)*p^n * (1-p)^(n-x))
b <- function(x,n,p){
return (choose(n,x)*p^n * (1-p)^(n-x))
}
b(90,100,0.95)
b(10,100,0.05)
b <- function(x,n,p){
return (choose(n,x)*p^x * (1-p)^(x-n))
}
b(90,100,0.95)
b(10,100,0.05)
b <- function(x,n,p){
return (choose(n,x)*p^x * (1-p)^(n-x))
}
b(90,100,0.95)
b(10,100,0.05)
b(90,100,0.95)
b(10,100,0.05)
pmf(100,10,.05)
cdf(100,0:10,rep(0.05,11))
cdf(100,0:10,0.05)
cdf(25,0:10,0.05)
cdf(25,0:1,0.05)
b(2,25,0.05)
b(2,25,0.05)-b(1,25,0.05)
b(2,25,0.05)
b(1,25,0.05)
cdf(25,0:2,0.05)-cdf(25,0:1,0.05)
cdf(25,0:2,0.05)-cdf(25,0:1,0.05)==cdf(25,2,0.05)
cdf(25,2,0.05)
cdf(25,0:2,0.05)-cdf(25,0:1,0.05)
setwd("/Users/stephenkinser/mtsu-makers/sustainability-project/MakersSite")
my_db<- src_sqlite("db.sqlite3", create= F)
my_db
setwd("/Users/stephenkinser/mtsu-makers/sustainability-project/MakersSite")
my_db<- src_sqlite("db.sqlite3", create= F)
rm(list=ls())
#library("quantmod")
#library("RSQLite") #you'd think this would be the one
#library("RMySQL")
library("dplyr")
library("ggplot2")
setwd("/Users/stephenkinser/mtsu-makers/sustainability-project/MakersSite")
my_db<- src_sqlite("db.sqlite3", create= F)
my_db
tempHumidity<- tbl(my_db, "tempHumidity_temphumidity")
localtemp=tempHumidity%>%
select( temperature, humidity, date_rec)%>%
filter(date_rec >= Date("2015-08-24 20:00:23.220000"))%>%
collect()
localtemp$time=strftime(localtemp$date_rec, format="%H:%M:%S")
localtemp$date_rec=as.Date(localtemp$date_rec)
ggplot(aes(y=humidity, x=time),data = localtemp)+geom_point()+facet_wrap(~date_rec)
ggplot(aes(y=temperature, x=as.Date(date_rec)),data = localtemp)+geom_point()
ggplot(aes(y=temperature, x=as.Date(date_rec)),data = localtemp)+geom_point()
ggplot(aes(y=humidity, x=as.Date(date_rec)),data = localtemp)+geom_point()
ggplot(aes(y=temperature, x=as.Date(date_rec)),data = localtemp)+geom_point()
ggplot(aes(y=humidity, x=as.Date(date_rec)),data = localtemp)+geom_point()
ggplot(aes(y=temperature, x=time),data = localtemp)+geom_point()+facet_wrap(~date_rec)
setwd("/Users/stephenkinser")
read.csv("ststs.csv")
read.csv("stats.csv")
eden=read.csv("stats.csv")
mean(eden)
mean(eden[,1])
mean(eden[,])
mean(eden$heur..0.B)
mean(eden$heur..0.B, rm.na=T)
mean(eden$heur..0.B, na.rm=T)
mean(eden$, na.rm=T)
mean(eden, na.rm=T)
apply(eden,0,function(x) mean(x,na.rm=T))
apply(eden,1,function(x) mean(x,na.rm=T))
sapply(eden,function(x) mean(x,na.rm=T))
summary(eden)
library("ggplot2")
setwd("/Users/stephenkinser")
eden=read.csv("stats.csv")
mean(eden$heur..0.B, na.rm=T)
summary(eden)
ggplot(aes(),data=eden)
ggplot(aes(),data=eden)+geom_point()
ggplot(data=eden)+geom_point()
summary(eden)
eden
ggplot(data=eden)+geom_point(aes(x=heur..0.B,y=seq_along(heur..0.B))
ggplot(data=eden)+geom_point(aes(x=heur..0.B,y=seq_along(heur..0.B))
ggplot(data=eden)+geom_point(aes(x=heur..0.B,y=seq_along(heur..0.B))
ggplot(data=eden)+geom_point(aes(x=heur..0.B,y=seq_along(heur..0.B)))
ggplot(data=eden)+geom_point(aes(x=heur..0.B,y=seq_along(heur..0.B)))
summary(eden)
ggplot(data=eden)+geom_point(aes(x=heur..0.B,y=seq_along(heur..0.B)))
+geom_point(aes(x=heur...1,y=seq_along(heur..0.B)))
ggplot(data=eden)+geom_point(aes(x=heur..0.B,y=seq_along(heur..0.B),colors="red"))
+geom_point(aes(x=heur...1,y=seq_along(heur...1)colors="blue"))
ggplot(data=eden)+geom_point(aes(x=heur..0.B,y=seq_along(heur..0.B),colors="red"))
+geom_point(aes(x=heur...1,y=seq_along(heur...1),colors="blue"))
ggplot(data=eden)#+geom_point(aes(x=heur..0.B,y=seq_along(heur..0.B),colors="red"))
+geom_point(aes(x=heur...1,y=seq_along(heur...1),colors="blue"))
ggplot(data=eden)+geom_point(aes(x=heur...1,y=seq_along(heur...1),colors="blue"))
e
output: LaTeX
fxu= function(x,mu){
return (2.78^-mu* mu ^x/ factorial(x))
}
fxu(4,15)
rm(list=ls())
library("dplyr")
library("ggplot2")
library("quantreg")
setwd("/Users/stephenkinser/mtsu-makers/sustainability-project/MakersSite")
my_db<- src_sqlite("db.sqlite3", create= F)
my_db
tempHumidity<- tbl(my_db, "tempHumidity_temphumidity")
localtemp=tempHumidity%>%
select( temperature, humidity, date_rec)%>%
filter(date_rec >= Date("2015-08-24 20:00:23.220000"))%>%
collect()
View(tempHumidity)
tempHumidity$temperature
localtemp=tempHumidity%>%
select( temperature, humidity, date_rec)%>%
filter(date_rec >= Date("2015-08-24 20:00:23.220000"))%>%
collect()
tempHumidity$id
localtemp$temperature
sum(localtemp$temperature)
ggplot(aes(y=temperature, x=as.Date(date_rec)),data = localtemp)+geom_point()
mydata = read.csv("jira-cleaner.csv")
library(ggplot2)
setwd("/Users/stephenkinser/Timesheet-Project/suggestedGraphTypes")
mydata = read.csv("jira-cleaner.csv")
View(mydata)
exp(1)
1-pnorm(50, mean=100.0, sd=100)
dnorm(.8944)
pnorm(1.25)
1-pnorm(50, mean=100.0, sd=100)
View(mydata)
integrand=function(x) {1-x}
integrand=function(x) {1-x^2}
integrate(integrand, lower=0, )
integrate(integrand, lower=0, upper=1)
integrate(integrand, lower=0, upper=1)$value
1/integrate(integrand, lower=0, upper=1)$value
library(Ryacas)
install.packages("Ryacas")
library(Ryacas)
x <- Sym("x")
c=1/integrate(integrand, lower=0, upper=1)$value
Integrate(c*(1-x**2))
c
constant=1/integrate(integrand, lower=0, upper=1)$value
Integrate(c*(1-x**2))
Integrate(constant*(1-x**2))
x
Integrate(constant*(1-x**2),x)
x <- Sym("x")
Integrate(constant*(1-x**2),x)
Integrate(sin(x), x)
library(Ryacas)
Integrate(sin(x), x)
x <- Sym("x")
Integrate(constant*(1-x**2),x)
Integrate(sin(x), x)
yacasInstall()
demo(Ryacas)
library(PolynomF)
library("PolynomF")
install.packages("PolynomF")
pnorm(.5)
pnorm(.8)
setwd("/Users/stephenkinser/Timesheet-Project/suggestedGraphTypes")
library(ggplot2)
mydata = read.csv("jira-cleaner.csv")
View(mydata)
subset(mydata, as.character(Project)== "DOT Next" )
table(subset(mydata, as.character(Assignee)!= "Unassigned" ))
?table
table(mydata)
table(mydata, Assignee)
View(mydata$Assignee)
mydata$Assignee==mydata[1]
mydata$Assignee==mydata[1,]
mydata$Assignee==mydata[,1]
mydata$Assignee
mydata[1]
mydata[2]
rownames(mydata)
colnames(mydata)
colnames(mydata)=="Assignee"
which(colnames(mydata), "Assigee")
table(mydata, 6)
table(mydata, 6)
mydata
cumFreq(mydata)
cumsum(mydata)
cumsum(mydata$Assignee)
cumsum(as.character(mydata$Assignee))
cumsum(mydata$Assignee)
prop.table(mydata$Assignee)
prop.table(as.character(mydata$Assignee))
table(as.character(mydata$Assignee))
table(as.character(mydata$Project))
table(as.character(mydata$Project)~Assignee)
table(as.character(mydata$Project)~mydata$Assignee)
table(~as.character(mydata$Project)+mydata$Assignee)
table(as.character(mydata$Project)~mydata(Assignee))
table(as.character(mydata$Project),mydata(Assignee))
table(as.character(mydata$Project),mydata$Assignee)
table(as.character(mydata$Update),mydata$Assignee)
table(mydata$Update,mydata$Assignee,)
table(mydata$Update,mydata$Assignee,mydata$Project)
mytable=table(mydata$Update,mydata$Assignee,mydata$Project)
View(mytable)
subeset(mytable,Freq !=0)
subset(mytable,Freq !=0)
mytable$Freq
as.data.frame(mytable)$Freq
subset(as.data.frame(mytable),Freq !=0)
finalcsv =subset(as.data.frame(mytable),Freq !=0)
mytable=with(subset(mydata, as.character(Assignee)!= "Unassigned")table(Update,Assignee,Project)))
mytable=with(subset(mydata, as.character(Assignee)!= "Unassigned"),table(Update,Assignee,Project)))
subset(mydata, as.character(Assignee)!= "Unassigned")
mytable=with(subset(mydata, as.character(Assignee)!= "Unassigned"),table(Update,Assignee,Project)))
mytable=with(subset(mydata, as.character(Assignee)!= "Unassigned"),table(Update,Assignee,Project))
mytable=with(subset(mydata, as.character(Assignee)!= "Unassigned"),table(Update,Assignee,Project))
subset(mydata, as.character(Assignee)!= "Unassigned")
mydata
with(subset(mydata, as.character(Assignee)!= "Unassigned"),table(Assignee))
with(subset(mydata, as.character(Assignee)!= "Unassigned"),table(Update))
with(subset(mydata, as.character(Assignee)!= "Unassigned"),table(Updated))
mytable=with(subset(mydata, as.character(Assignee)!= "Unassigned"),table(Updated,Assignee,Project))
finalcsv =subset(as.data.frame(mytable),Freq !=0)
finalcsv
write.csv(finalcsv)
write.csv(finalcsv, file= "freq.csv")
ggplot(data=subset(mydata, as.character(Project)== "DOT Next" ),aes(x=Updated,color=Assignee))+geom_histogram()+ coord_polar()
ggplot(data=subset(mydata, as.character(Project)== "DOT Next" ),aes(x=factor(1),fill=Assignee))+geom_bar(width=1)+coord_polar()
ggplot(data=subset(mydata, as.character(Project)== "DREAMaps Online" ),aes(x=factor(1),fill=Assignee))+geom_bar(width=1)+coord_polar()
ggplot(data= subset(mydata, as.character(Assignee)!= "Unassigned" ), aes(x=Updated, color=Project))+geom_histogram()+facet_wrap(~Assignee)
View(mydata)
install.packages("rjson")
library("rjson")
toJSON(finalcsv)
toJSON(finalcsv, method = "C")
write (toJSON(finalcsv, method = "C"), "freq.json")
sapply(finalcsv, function(x){toJSON(x)})
mapply(finalcsv, function(x){toJSON(x)})
mapply(finalcsv,1, function(x){toJSON(x)})
apply(finalcsv,1, function(x){toJSON(x)})
write (apply(finalcsv,1, function(x){toJSON(x)}), "freq.json")
finalcsv
